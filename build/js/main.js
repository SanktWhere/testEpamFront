import{userRepository}from"./partials/userRepository.js";import{renderUser}from"./partials/renderUser.js";document.addEventListener("DOMContentLoaded",function(){let e=new userRepository;function t(e,t="inc"){e.sort(function(e,r){let s=e.firstName.toLowerCase(),n=r.firstName.toLowerCase();return"inc"===t?s<n?-1:s>n?1:0:s>n?-1:s<n?1:0})}document.getElementsByTagName("select")[0].addEventListener("change",function(r){if("ABC"===r.target.value){t(e.storage),renderUser.clearRenderContent("content");for(const t in e.storage)renderUser.render(e.storage[t],"content")}else if("CBA"===r.target.value){t(e.storage,"dec"),renderUser.clearRenderContent("content");for(const t in e.storage)renderUser.render(e.storage[t],"content")}}),document.addEventListener("click",function(e){let t=e.target.closest(".user");t&&(t.getElementsByClassName("user__modal")[0].style.display="flex"),e.target.classList.contains("user__modal")&&(t.getElementsByClassName("user__modal")[0].style.display="none"),e.target.classList.contains("close")&&(t.getElementsByClassName("user__modal")[0].style.display="none")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsidXNlclJlcG9zaXRvcnkiLCJyZW5kZXJVc2VyIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwidXNlclJlcG8iLCJzb3J0VXNlcnMiLCJkYXRhIiwib3B0aW9uIiwic29ydCIsImEiLCJiIiwibmFtZUEiLCJmaXJzdE5hbWUiLCJ0b0xvd2VyQ2FzZSIsIm5hbWVCIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJlIiwidGFyZ2V0IiwidmFsdWUiLCJzdG9yYWdlIiwiY2xlYXJSZW5kZXJDb250ZW50Iiwia2V5IiwicmVuZGVyIiwidXNlciIsImNsb3Nlc3QiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic3R5bGUiLCJkaXNwbGF5IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiXSwibWFwcGluZ3MiOiJPQUFTQSxtQkFBc0Isc0NBQ3RCQyxlQUFrQiwyQkFJM0JDLFNBQVNDLGlCQUFpQixtQkFBb0IsV0FDMUMsSUFBSUMsRUFBVyxJQUFJSixlQUVuQixTQUFTSyxFQUFVQyxFQUFNQyxFQUFTLE9BQzlCRCxFQUFLRSxLQUFLLFNBQVNDLEVBQUdDLEdBQ2xCLElBQUlDLEVBQVFGLEVBQUVHLFVBQVVDLGNBQ3BCQyxFQUFRSixFQUFFRSxVQUFVQyxjQUN4QixNQUFlLFFBQVhOLEVBQ0lJLEVBQVFHLEdBQ0osRUFDSkgsRUFBUUcsRUFDRCxFQUNKLEVBR0hILEVBQVFHLEdBQ0osRUFDSkgsRUFBUUcsRUFDRCxFQUNKLElBS05aLFNBQVNhLHFCQUFxQixVQUFVLEdBQzlDWixpQkFBaUIsU0FBVSxTQUFTYSxHQUN2QyxHQUF1QixRQUFuQkEsRUFBRUMsT0FBT0MsTUFBaUIsQ0FDMUJiLEVBQVVELEVBQVNlLFNBQ25CbEIsV0FBV21CLG1CQUFtQixXQUM5QixJQUFLLE1BQU1DLEtBQU9qQixFQUFTZSxRQUN2QmxCLFdBQVdxQixPQUFPbEIsRUFBU2UsUUFBUUUsR0FBTSxnQkFHNUMsR0FBdUIsUUFBbkJMLEVBQUVDLE9BQU9DLE1BQWlCLENBQy9CYixFQUFVRCxFQUFTZSxRQUFTLE9BQzVCbEIsV0FBV21CLG1CQUFtQixXQUM5QixJQUFLLE1BQU1DLEtBQU9qQixFQUFTZSxRQUN2QmxCLFdBQVdxQixPQUFPbEIsRUFBU2UsUUFBUUUsR0FBTSxjQU1yRG5CLFNBQVNDLGlCQUFpQixRQUFTLFNBQVNhLEdBQ3hDLElBQUlPLEVBQU9QLEVBQUVDLE9BQU9PLFFBQVEsU0FFeEJELElBQ0FBLEVBQUtFLHVCQUF1QixlQUFlLEdBQUdDLE1BQU1DLFFBQVUsUUFHOURYLEVBQUVDLE9BQU9XLFVBQVVDLFNBQVMsaUJBQzVCTixFQUFLRSx1QkFBdUIsZUFBZSxHQUFHQyxNQUFNQyxRQUFVLFFBRzlEWCxFQUFFQyxPQUFPVyxVQUFVQyxTQUFTLFdBQzVCTixFQUFLRSx1QkFBdUIsZUFBZSxHQUFHQyxNQUFNQyxRQUFVIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VyUmVwb3NpdG9yeSB9IGZyb20gJy4vcGFydGlhbHMvdXNlclJlcG9zaXRvcnkuanMnO1xyXG5pbXBvcnQgeyByZW5kZXJVc2VyIH0gZnJvbSAnLi9wYXJ0aWFscy9yZW5kZXJVc2VyLmpzJztcclxuXHJcblxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkgeyBcclxuICAgIGxldCB1c2VyUmVwbyA9IG5ldyB1c2VyUmVwb3NpdG9yeSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIHNvcnRVc2VycyhkYXRhLCBvcHRpb24gPSAnaW5jJykge1xyXG4gICAgICAgIGRhdGEuc29ydChmdW5jdGlvbihhLCBiKSB7XHJcbiAgICAgICAgICAgIGxldCBuYW1lQSA9IGEuZmlyc3ROYW1lLnRvTG93ZXJDYXNlKCk7IFxyXG4gICAgICAgICAgICBsZXQgbmFtZUIgPSBiLmZpcnN0TmFtZS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICBpZiAob3B0aW9uID09PSAnaW5jJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hbWVBIDwgbmFtZUIpIFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hbWVBID4gbmFtZUIpICBcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hbWVBID4gbmFtZUIpIFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hbWVBIDwgbmFtZUIpICBcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzZWxlY3QnKVswXTtcclxuICAgIHNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgaWYgKGUudGFyZ2V0LnZhbHVlID09PSAnQUJDJykge1xyXG4gICAgICAgICAgICBzb3J0VXNlcnModXNlclJlcG8uc3RvcmFnZSk7XHJcbiAgICAgICAgICAgIHJlbmRlclVzZXIuY2xlYXJSZW5kZXJDb250ZW50KCdjb250ZW50Jyk7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIHVzZXJSZXBvLnN0b3JhZ2UpIHtcclxuICAgICAgICAgICAgICAgIHJlbmRlclVzZXIucmVuZGVyKHVzZXJSZXBvLnN0b3JhZ2Vba2V5XSwgJ2NvbnRlbnQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChlLnRhcmdldC52YWx1ZSA9PT0gJ0NCQScpIHtcclxuICAgICAgICAgICAgc29ydFVzZXJzKHVzZXJSZXBvLnN0b3JhZ2UsICdkZWMnKTtcclxuICAgICAgICAgICAgcmVuZGVyVXNlci5jbGVhclJlbmRlckNvbnRlbnQoJ2NvbnRlbnQnKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdXNlclJlcG8uc3RvcmFnZSkge1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyVXNlci5yZW5kZXIodXNlclJlcG8uc3RvcmFnZVtrZXldLCAnY29udGVudCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGxldCB1c2VyID0gZS50YXJnZXQuY2xvc2VzdCgnLnVzZXInKTtcclxuXHJcbiAgICAgICAgaWYgKHVzZXIpIHtcclxuICAgICAgICAgICAgdXNlci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd1c2VyX19tb2RhbCcpWzBdLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCd1c2VyX19tb2RhbCcpKSB7XHJcbiAgICAgICAgICAgIHVzZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndXNlcl9fbW9kYWwnKVswXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnY2xvc2UnKSkge1xyXG4gICAgICAgICAgICB1c2VyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3VzZXJfX21vZGFsJylbMF0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7Il19
