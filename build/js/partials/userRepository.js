import{userModel}from"./userModel.js";import{renderUser}from"./renderUser.js";export class userRepository{constructor(){this.storage=[],this.options="results=20&nat=us,fr&inc=name,picture,location,email,phone";let e=this;this.getData("https://randomuser.me/api/?",this.options).then(function(t){e.fillStore(JSON.parse(t.responseText).results);for(const t in e.storage)renderUser.render(e.storage[t],"content-main")})}fillStore(e){let t={};for(const r in e)t=new userModel(r,e[r].name.title,e[r].name.first,e[r].name.last,e[r].location.city,e[r].phone,e[r].email,e[r].location.street,e[r].location.state,e[r].picture.medium,e[r].picture.large),this.storage.push(t)}getData(e,t){let r=new XMLHttpRequest;return new Promise(function(s,o){r.onload=(()=>s(r)),r.onerror=(()=>o(new Error("Loading error"))),r.open("GET",e+t,!0),r.send()})}getUserById(e){if(this.isUserIdExist(e))return this.storage[e]}isUserIdExist(e){for(let t=0;t<this.storage.length;t++)if(this.storage[t].id==e)return!0}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL3VzZXJSZXBvc2l0b3J5LmpzIl0sIm5hbWVzIjpbInVzZXJNb2RlbCIsInJlbmRlclVzZXIiLCJ1c2VyUmVwb3NpdG9yeSIsIltvYmplY3QgT2JqZWN0XSIsInRoaXMiLCJzdG9yYWdlIiwib3B0aW9ucyIsInRoYXQiLCJnZXREYXRhIiwidGhlbiIsInJlc3VsdCIsImZpbGxTdG9yZSIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsInJlc3VsdHMiLCJrZXkiLCJyZW5kZXIiLCJkYXRhIiwidXNlck1vZCIsIm5hbWUiLCJ0aXRsZSIsImZpcnN0IiwibGFzdCIsImxvY2F0aW9uIiwiY2l0eSIsInBob25lIiwiZW1haWwiLCJzdHJlZXQiLCJzdGF0ZSIsInBpY3R1cmUiLCJtZWRpdW0iLCJsYXJnZSIsInB1c2giLCJ1cmwiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25sb2FkIiwib25lcnJvciIsIkVycm9yIiwib3BlbiIsInNlbmQiLCJpZCIsImlzVXNlcklkRXhpc3QiLCJpIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiT0FBUUEsY0FBZ0Isd0JBQ2hCQyxlQUFpQix5QkFFbEIsTUFBTUMsZUFDVEMsY0FDSUMsS0FBS0MsUUFBVSxHQUNmRCxLQUFLRSxRQUFVLDZEQUNmLElBQUlDLEVBQU9ILEtBQ1hBLEtBQUtJLFFBQVEsOEJBQStCSixLQUFLRSxTQUFTRyxLQUFLLFNBQVVDLEdBQ3JFSCxFQUFLSSxVQUFVQyxLQUFLQyxNQUFNSCxFQUFPSSxjQUFjQyxTQUMvQyxJQUFLLE1BQU1DLEtBQU9ULEVBQUtGLFFBQ25CSixXQUFXZ0IsT0FBT1YsRUFBS0YsUUFBUVcsR0FBTSxrQkFNakRiLFVBQVVlLEdBQ04sSUFBSUMsRUFBVSxHQUNkLElBQUssTUFBTUgsS0FBT0UsRUFDZEMsRUFBVSxJQUFJbkIsVUFBVWdCLEVBQUtFLEVBQUtGLEdBQUtJLEtBQUtDLE1BQU9ILEVBQUtGLEdBQUtJLEtBQUtFLE1BQU9KLEVBQUtGLEdBQUtJLEtBQUtHLEtBQzVETCxFQUFLRixHQUFLUSxTQUFTQyxLQUFNUCxFQUFLRixHQUFLVSxNQUFPUixFQUFLRixHQUFLVyxNQUFPVCxFQUFLRixHQUFLUSxTQUFTSSxPQUM5RVYsRUFBS0YsR0FBS1EsU0FBU0ssTUFBT1gsRUFBS0YsR0FBS2MsUUFBUUMsT0FBUWIsRUFBS0YsR0FBS2MsUUFBUUUsT0FDbEc1QixLQUFLQyxRQUFRNEIsS0FBS2QsR0FJMUJoQixRQUFRK0IsRUFBSzVCLEdBQ1QsSUFBSTZCLEVBQU0sSUFBSUMsZUFDZCxPQUFPLElBQUlDLFFBQVEsU0FBU0MsRUFBU0MsR0FDakNKLEVBQUlLLE9BQVMsS0FBTUYsRUFBUUgsSUFDM0JBLEVBQUlNLFFBQVUsS0FBTUYsRUFBTyxJQUFJRyxNQUFNLG1CQUNyQ1AsRUFBSVEsS0FBSyxNQUFPVCxFQUFNNUIsR0FBUyxHQUMvQjZCLEVBQUlTLFNBSVp6QyxZQUFZMEMsR0FDUixHQUFHekMsS0FBSzBDLGNBQWNELEdBQ2xCLE9BQU96QyxLQUFLQyxRQUFRd0MsR0FJNUIxQyxjQUFjMEMsR0FDVixJQUFLLElBQUlFLEVBQUksRUFBR0EsRUFBSTNDLEtBQUtDLFFBQVEyQyxPQUFRRCxJQUNyQyxHQUFJM0MsS0FBS0MsUUFBUTBDLEdBQUdGLElBQU1BLEVBQ3RCLE9BQU8iLCJmaWxlIjoicGFydGlhbHMvdXNlclJlcG9zaXRvcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZXJNb2RlbH0gZnJvbSAnLi91c2VyTW9kZWwuanMnO1xuaW1wb3J0IHtyZW5kZXJVc2VyfSBmcm9tICcuL3JlbmRlclVzZXIuanMnO1xuXG5leHBvcnQgY2xhc3MgdXNlclJlcG9zaXRvcnkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBbXTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gJ3Jlc3VsdHM9MjAmbmF0PXVzLGZyJmluYz1uYW1lLHBpY3R1cmUsbG9jYXRpb24sZW1haWwscGhvbmUnO1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuZ2V0RGF0YSgnaHR0cHM6Ly9yYW5kb211c2VyLm1lL2FwaS8/JywgdGhpcy5vcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIHRoYXQuZmlsbFN0b3JlKEpTT04ucGFyc2UocmVzdWx0LnJlc3BvbnNlVGV4dCkucmVzdWx0cyk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGF0LnN0b3JhZ2UpIHtcbiAgICAgICAgICAgICAgICByZW5kZXJVc2VyLnJlbmRlcih0aGF0LnN0b3JhZ2Vba2V5XSwgJ2NvbnRlbnQtbWFpbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZpbGxTdG9yZShkYXRhKSB7XG4gICAgICAgIGxldCB1c2VyTW9kID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICAgIHVzZXJNb2QgPSBuZXcgdXNlck1vZGVsKGtleSwgZGF0YVtrZXldLm5hbWUudGl0bGUsIGRhdGFba2V5XS5uYW1lLmZpcnN0LCBkYXRhW2tleV0ubmFtZS5sYXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFba2V5XS5sb2NhdGlvbi5jaXR5LCBkYXRhW2tleV0ucGhvbmUsIGRhdGFba2V5XS5lbWFpbCwgZGF0YVtrZXldLmxvY2F0aW9uLnN0cmVldCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtrZXldLmxvY2F0aW9uLnN0YXRlLCBkYXRhW2tleV0ucGljdHVyZS5tZWRpdW0sIGRhdGFba2V5XS5waWN0dXJlLmxhcmdlKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcmFnZS5wdXNoKHVzZXJNb2QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0RGF0YSh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICB4aHIub25sb2FkID0gKCkgPT4gcmVzb2x2ZSh4aHIpO1xuICAgICAgICAgICAgeGhyLm9uZXJyb3IgPSAoKSA9PiByZWplY3QobmV3IEVycm9yKGBMb2FkaW5nIGVycm9yYCkpO1xuICAgICAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCArIG9wdGlvbnMsIHRydWUpO1xuICAgICAgICAgICAgeGhyLnNlbmQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0VXNlckJ5SWQoaWQpIHtcbiAgICAgICAgaWYodGhpcy5pc1VzZXJJZEV4aXN0KGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZVtpZF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpc1VzZXJJZEV4aXN0KGlkKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdG9yYWdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zdG9yYWdlW2ldLmlkID09IGlkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il19
