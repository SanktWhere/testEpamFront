export class renderUser{static render(s,e){console.log(this);let a=document.createElement("div");var n;a.classList.add("user"),a.innerHTML=`\n                <div class="user__image"><img src="${(n=s).avatarMedium}" alt="user" /></div>\n                <div class="user__info">\n                    <span class="user__title">${n.nameTitle}.</span>\n                    <span class="user__firs-name">${n.firstName}</span>\n                    <span class="user__last-name">${n.lastName}</span>\n                </div>\n                <div class="user__modal">\n                    <div class="user__modal-content">\n                        <span class="close">&times;</span>\n                        <div class="user__info">\n                            <span>${n.nameTitle}.</span>\n                            <span>${n.firstName}</span>\n                            <span>${n.lastName}</span>\n                        </div>\n                        <div><span class="user__text text_bold">City:</span>${n.city}</div>\n                        <div><span class="user__text text_bold">State:</span>${n.state}</div>\n                        <div><span class="user__text text_bold">Street:</span>${n.street}</div>\n                        <div><span class="user__text text_bold">Telephone:</span>${n.telephone}</div>\n                        <div><span class="user__text text_bold">Email:</span>${n.email}</div>\n                        <div class="user__modal-image"><img src=${n.avatarLarge} alt='avatar'></div>\n                    </div>\n                </div>\n            `,document.getElementsByClassName(e)[0].append(a)}static clearRenderContent(s){document.getElementsByClassName(s)[0].innerHTML=""}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL3JlbmRlclVzZXIuanMiXSwibmFtZXMiOlsicmVuZGVyVXNlciIsIltvYmplY3QgT2JqZWN0XSIsImRhdGEiLCJwbGFjZUNsYXNzIiwiY29uc29sZSIsImxvZyIsInRoaXMiLCJkaXYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1c2VyTW9kZWwiLCJjbGFzc0xpc3QiLCJhZGQiLCJpbm5lckhUTUwiLCJhdmF0YXJNZWRpdW0iLCJuYW1lVGl0bGUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImNpdHkiLCJzdGF0ZSIsInN0cmVldCIsInRlbGVwaG9uZSIsImVtYWlsIiwiYXZhdGFyTGFyZ2UiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiYXBwZW5kIl0sIm1hcHBpbmdzIjoiT0FBTyxNQUFNQSxXQUNUQyxjQUFjQyxFQUFNQyxHQUNoQkMsUUFBUUMsSUFBSUMsTUFDWixJQUFJQyxFQUFNQyxTQUFTQyxjQUFjLE9BR2pDLElBQTZCQyxFQUY3QkgsRUFBSUksVUFBVUMsSUFBSSxRQTZCbEJMLEVBQUlNLG1FQTNCeUJILEVBMkJPUixHQXpCbUJZLDhIQUVmSixFQUFVSyx3RUFDTkwsRUFBVU0sdUVBQ1ZOLEVBQVVPLDhSQU0xQlAsRUFBVUssd0RBQ1ZMLEVBQVVNLHVEQUNWTixFQUFVTyxnSUFFZ0NQLEVBQVVRLDRGQUNUUixFQUFVUyw4RkFDVFQsRUFBVVUsa0dBQ1BWLEVBQVVXLGlHQUNkWCxFQUFVWSxnRkFDdkJaLEVBQVVhLG9HQU96RGYsU0FBU2dCLHVCQUF1QnJCLEdBQVksR0FDbERzQixPQUFPbEIsR0FHaEJOLDBCQUEwQkUsR0FDWEssU0FBU2dCLHVCQUF1QnJCLEdBQVksR0FDbERVLFVBQVkiLCJmaWxlIjoicGFydGlhbHMvcmVuZGVyVXNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyByZW5kZXJVc2VyIHtcclxuICAgIHN0YXRpYyByZW5kZXIoZGF0YSwgcGxhY2VDbGFzcykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMpO1xyXG4gICAgICAgIGxldCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgndXNlcicpO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBnZXRDb250ZW50Rm9yUmVuZGVyKHVzZXJNb2RlbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXJfX2ltYWdlXCI+PGltZyBzcmM9XCIke3VzZXJNb2RlbC5hdmF0YXJNZWRpdW19XCIgYWx0PVwidXNlclwiIC8+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlcl9faW5mb1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidXNlcl9fdGl0bGVcIj4ke3VzZXJNb2RlbC5uYW1lVGl0bGV9Ljwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInVzZXJfX2ZpcnMtbmFtZVwiPiR7dXNlck1vZGVsLmZpcnN0TmFtZX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ1c2VyX19sYXN0LW5hbWVcIj4ke3VzZXJNb2RlbC5sYXN0TmFtZX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyX19tb2RhbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyX19tb2RhbC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY2xvc2VcIj4mdGltZXM7PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlcl9faW5mb1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHt1c2VyTW9kZWwubmFtZVRpdGxlfS48L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4ke3VzZXJNb2RlbC5maXJzdE5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHt1c2VyTW9kZWwubGFzdE5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48c3BhbiBjbGFzcz1cInVzZXJfX3RleHQgdGV4dF9ib2xkXCI+Q2l0eTo8L3NwYW4+JHt1c2VyTW9kZWwuY2l0eX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48c3BhbiBjbGFzcz1cInVzZXJfX3RleHQgdGV4dF9ib2xkXCI+U3RhdGU6PC9zcGFuPiR7dXNlck1vZGVsLnN0YXRlfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuIGNsYXNzPVwidXNlcl9fdGV4dCB0ZXh0X2JvbGRcIj5TdHJlZXQ6PC9zcGFuPiR7dXNlck1vZGVsLnN0cmVldH08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48c3BhbiBjbGFzcz1cInVzZXJfX3RleHQgdGV4dF9ib2xkXCI+VGVsZXBob25lOjwvc3Bhbj4ke3VzZXJNb2RlbC50ZWxlcGhvbmV9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PHNwYW4gY2xhc3M9XCJ1c2VyX190ZXh0IHRleHRfYm9sZFwiPkVtYWlsOjwvc3Bhbj4ke3VzZXJNb2RlbC5lbWFpbH08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXJfX21vZGFsLWltYWdlXCI+PGltZyBzcmM9JHt1c2VyTW9kZWwuYXZhdGFyTGFyZ2V9IGFsdD0nYXZhdGFyJz48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICBgO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGl2LmlubmVySFRNTCA9IGdldENvbnRlbnRGb3JSZW5kZXIoZGF0YSk7XHJcbiAgICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKHBsYWNlQ2xhc3MpWzBdO1xyXG4gICAgICAgIGVsZW0uYXBwZW5kKGRpdik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNsZWFyUmVuZGVyQ29udGVudChwbGFjZUNsYXNzKSB7XHJcbiAgICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKHBsYWNlQ2xhc3MpWzBdO1xyXG4gICAgICAgIGVsZW0uaW5uZXJIVE1MID0gJyc7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG4iXX0=
